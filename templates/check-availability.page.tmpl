{{template "base" .}}

{{define "css"}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
<link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
{{end}}

{{define "content"}}

<style>
  .red-text {
    color: red;
  }
</style>

<div class="mx-auto mt-5 p-5 col-9">
  <h1> Search for Availability </h1>

  <form action="/check-availability" class="mt-3 needs-validation" method="POST" novalidate autocomplete="off">

    <input autocomplete="false" name="hidden" type="text" style="display:none;">
    <input autocomplete="false" name="csrf_token" type="hidden" value="{{index .StringMap " csrf_token"}}">


    <div class="row" id="range-picker">

      <div class="col">

        <div class="mb-3">
          <label for="start" class="form-label">Start Date</label>
          <input type="text" class="form-control" id="start" name="start" aria-describedby="startDate" required>
          <div class="invalid-feedback">
            Please input a date
          </div>
        </div>

      </div>

      <div class="col">

        <div class="mb-3">
          <label for="end" class="form-label">End Date</label>
          <input type="text" class="form-control" id="end" name="end" aria-describedby="endDate" required>
          <div class="invalid-feedback">
            Please input a date
          </div>
        </div>

      </div>

      <button type="submit" class="btn btn-primary mt-3">Check for availability</button>

    </div>

  </form>

  <div class="mt-4">
    <p id="text-toggle"> <strong> This is some text </strong> </p>
    <a href="/check-availability/json">
      <button id="btn-toggle" type="button" class="btn btn-outline-primary">Button</button>
    </a>
  </div>


</div>

<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
<script src="https://unpkg.com/notie"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

  let attention = prompt();

  const elem = document.getElementById("range-picker");
  const rangepicker = new DateRangePicker(elem, {
    buttonClass: "btn",
  });


  // let button = document.getElementById("btn-toggle");

  // button.addEventListener("click", function () {
  //   attention.error("Mantul", "Mantaap");
  // });


  const forms = document.querySelectorAll('.needs-validation');
  Array.from(forms).forEach(form => {

    form.addEventListener('submit', function (event) {
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }

      form.classList.add('was-validated');
    });

  });

  function notify(msg, msgType) {
    notie.alert({
      type: msgType,
      text: msg,
      position: "bottom"
    })
  }

  function sweetAlert(title, html, icon, confirmButtonText) {
    Swal.fire({
      title: title,
      html: html,
      icon: icon,
      confirmButtonText: confirmButtonText,
    })
  }

  function prompt() {

    let toast = function (param) {
      const Toast = Swal.mixin({
        toast: true,
        position: param.pos ?? "top-end",
        showConfirmButton: false,
        timer: 3000,
        icon: param.icon ?? "success",
        title: param.msg ?? "",
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.onmouseenter = Swal.stopTimer;
          toast.onmouseleave = Swal.resumeTimer;
        }
      });
      Toast.fire();
    }

    let success = function (title, msg) {
      Swal.fire({
        title: title ?? "Success",
        text: msg ?? "You're awesome",
        icon: "success"
      });
    }

    let error = function (title, msg) {
      Swal.fire({
        title: title ?? "Success",
        text: msg ?? "You're awesome",
        icon: "error"
      });
    }

    return {
      toast: toast,
      success: success,
      error: error,
    }

  }

</script>

{{end}}